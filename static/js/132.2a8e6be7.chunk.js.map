{"version":3,"file":"static/js/132.2a8e6be7.chunk.js","mappings":"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","sources":["components/tweetPage/Tweet/Tweet.styled.js","components/tweetPage/Tweet/Tweet.js","pages/TweetPage/TweetPage.js","redux/auth/authSelectors.js","redux/users/userSelectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nimport banner from \"../../../img/banner.png\";\nimport logo from \"../../../img/logo.png\";\nimport rectangle from \"../../../img/rectangle.png\";\nimport defaultAvatar from \"../../../img/defaultAvatar.png\";\n\nexport const Logo = styled.img.attrs({\n  src: logo,\n  alt: \"logo\",\n})`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  width: 76px;\n`;\n\nexport const Banner = styled.img.attrs({\n  src: banner,\n  alt: \"banner\",\n})`\n  width: 308px;\n  margin-bottom: 88px;\n`;\n\nexport const Rectangle = styled.img.attrs({\n  src: rectangle,\n  alt: \"rectangle\",\n})`\n  width: 100%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const AvatarBorder = styled.div`\n  width: 80px;\n  height: 80px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${(p) => p.theme.colors.primaryTextColor};\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: ${(p) => p.theme.radius.round};\n`;\n\nexport const AvatarWrapper = styled.div`\n  width: 62px;\n  height: 62px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  overflow: hidden;\n  background: ${(p) => p.theme.colors.primaryBgColor};\n  border-radius: ${(p) => p.theme.radius.round};\n`;\n\nexport const Avatar = styled.img.attrs((props) => ({\n  src: props.avatar ? props.avatar : defaultAvatar,\n  alt: \"avatar\",\n}))`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const TweetsCounter = styled.p`\n  margin-bottom: 16px;\n  text-align: center;\n  font-size: ${(p) => p.theme.fontSizes.s};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const FollowersCounter = styled.p`\n  margin-bottom: 26px;\n  text-align: center;\n  font-size: ${(p) => p.theme.fontSizes.s};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const Button = styled.button`\n  &:hover {\n    transform: scale(1.05);\n  }\n  padding: 14px 56px;\n  font-size: ${(p) => p.theme.fontSizes.m};\n  font-weight: ${(p) => p.theme.fontWeight.bolt};\n  color: ${(p) => p.theme.colors.secondaryTextColor};\n  cursor: pointer;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  transition: transform 0.2s ease-in-out;\n  background-color: ${(p) =>\n    p.isFollowed\n      ? p.theme.colors.accentColor\n      : p.theme.colors.primaryTextColor};\n`;\n\nexport const GoBackLink = styled(NavLink)`\n  margin-bottom: 2px;\n  font-size: ${(p) => p.theme.fontSizes.xs};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  color: red;\n  transition: color 0.2s ease-in-out;\n  &:hover {\n    color: ${(p) => p.theme.colors.accentColor};\n  }\n  &.active {\n    color: ${(p) => p.theme.colors.accentColor};\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nimport { Loader } from \"../../shared/Loader/Loader\";\n\nimport { updateFollower } from \"../../../redux/users/usersOperation\";\nimport { getUsers } from \"../../../redux/users/userSelectors\";\nimport { getAccountInfo } from \"../../../redux/auth/authSelectors\";\n\nimport {\n  Logo,\n  Banner,\n  Rectangle,\n  AvatarBorder,\n  AvatarWrapper,\n  Avatar,\n  TweetsCounter,\n  FollowersCounter,\n  Button,\n  GoBackLink,\n} from \"./Tweet.styled\";\n\nexport const Tweet = () => {\n  const { tweetId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/tweets\";\n  const dispatch = useDispatch();\n\n  const usersInStorage = useSelector(getUsers);\n  const myInfoInStorage = useSelector(getAccountInfo);\n\n  const [user, setUser] = useState(null);\n  const [isLoading, setisLoading] = useState(true);\n\n  useEffect(() => {\n    setUser(usersInStorage.find((user) => user.id === tweetId));\n    setTimeout(() => {\n      setisLoading(false);\n    }, 250);\n  }, [tweetId, usersInStorage]);\n\n  const handleClick = () => {\n    let newUserData = null;\n    if (!alreadyFollowed) {\n      newUserData = {\n        ...user,\n        followers: (parseInt(user.followers) + 1).toString(),\n        followersId: [...user.followersId, myInfoInStorage.id],\n      };\n    } else {\n      newUserData = {\n        ...user,\n        followers: (parseInt(user.followers) - 1).toString(),\n        followersId: user.followersId.filter((id) => id !== myInfoInStorage.id),\n      };\n    }\n\n    dispatch(updateFollower(newUserData));\n  };\n\n  const alreadyFollowed = user && user.followersId.includes(myInfoInStorage.id);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Logo />\n          <Banner />\n          <GoBackLink end=\"true\" to={backLinkHref}>\n            GO BACK\n          </GoBackLink>\n          <Rectangle />\n          <AvatarBorder />\n          <AvatarWrapper>\n            <Avatar avatar={user.avatar} />\n          </AvatarWrapper>\n          <TweetsCounter>\n            {user.tweets ? parseInt(user.tweets).toLocaleString(\"en\") : 0}{\" \"}\n            tweets\n          </TweetsCounter>\n          <FollowersCounter>\n            {user.followers ? parseInt(user.followers).toLocaleString(\"en\") : 0}{\" \"}\n            Followers\n          </FollowersCounter>\n          <Button onClick={handleClick} isFollowed={alreadyFollowed}>\n            {alreadyFollowed ? \"Following\" : \"Follow\"}\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n","import { Tweet } from \"../../components/tweetPage/Tweet/Tweet\";\n\nconst TweetPage = () => {\n  return <Tweet />;\n};\nexport default TweetPage;\n","export const getAccountInfo = (state) => state.auth.user;\nexport const getAccountsRefreshStatus = (state) => state.auth.isRefreshing;\n","export const getUsers = (state) => state.users.data;\nexport const getUsersRefreshStatus = (state) => state.users.isRefreshing;\n"],"names":["Logo","styled","src","alt","_templateObject","_taggedTemplateLiteral","Banner","banner","_templateObject2","Rectangle","_templateObject3","AvatarBorder","_templateObject4","p","theme","colors","primaryTextColor","radius","round","AvatarWrapper","_templateObject5","primaryBgColor","Avatar","props","avatar","defaultAvatar","_templateObject6","TweetsCounter","_templateObject7","fontSizes","s","fontWeight","normal","FollowersCounter","_templateObject8","Button","_templateObject9","m","bolt","secondaryTextColor","isFollowed","accentColor","GoBackLink","NavLink","_templateObject10","xs","Tweet","_location$state$from","_location$state","tweetId","useParams","backLinkHref","useLocation","state","from","dispatch","useDispatch","usersInStorage","useSelector","getUsers","myInfoInStorage","getAccountInfo","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isLoading","setisLoading","useEffect","find","id","setTimeout","alreadyFollowed","followersId","includes","_jsx","_Fragment","children","Loader","_jsxs","end","to","tweets","parseInt","toLocaleString","followers","onClick","newUserData","_objectSpread","toString","filter","concat","_toConsumableArray","updateFollower","auth","users","data","getUsersRefreshStatus","isRefreshing"],"sourceRoot":""}