{"version":3,"file":"static/js/854.a0310e03.chunk.js","mappings":"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","sources":["components/shared/Loader/Loader.styled.js","components/shared/Loader/Loader.js","components/tweetsPage/UsersItem/UsersItem.styled.js","components/tweetsPage/UsersItem/UsersItem.js","components/tweetsPage/DropdownMenu/DropdownMenu.styled.js","components/tweetsPage/DropdownMenu/DropdownMenu.js","components/tweetsPage/UsersList/UsersList.styled.js","components/tweetsPage/UsersList/UsersList.js","pages/TweetsPage/TweetsPage.js","redux/auth/authSelectors.js","redux/users/userSelectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoaderWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import { DotLoader } from \"react-spinners\";\n\nimport { LoaderWrapper } from \"./Loader.styled\";\n\nexport const Loader = () => (\n  <LoaderWrapper>\n    <DotLoader color=\"#36d7b7\" size={130} />\n  </LoaderWrapper>\n);\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nimport defaultAvatar from \"../../../img/defaultAvatar.png\";\n\nexport const Item = styled.li`\n  &:hover {\n    transform: scale(1.05);\n  }\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  padding: 5px;\n  border-radius: ${(p) => p.theme.radius.normal};\n  transition: transform 0.2s ease-in-out;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const AvatarBorder = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  background: ${(props) =>\n    props.subscribed ? \"red\" : props.theme.colors.primaryTextColor};\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: ${(p) => p.theme.radius.round};\n`;\n\nexport const AvatarWrapper = styled.div`\n  width: 30px;\n  height: 30px;\n  background: ${(p) => p.theme.colors.primaryBgColor};\n  border-radius: ${(p) => p.theme.radius.round};\n`;\n\nexport const Avatar = styled.img.attrs((props) => ({\n  src: props.avatar ? props.avatar : defaultAvatar,\n}))`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n`;\n\nexport const Title = styled.h2`\n  font-size: ${(p) => p.theme.fontSizes.xxs};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const TweetsCounterTitle = styled.h2`\n  text-decoration: underline;\n  font-size: ${(p) => p.theme.fontSizes.xxs};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const TweetsCounter = styled.p`\n  font-size: ${(p) => p.theme.fontSizes.xxxs};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const FollowersCounterTitle = styled.h2`\n  text-decoration: underline;\n  font-size: ${(p) => p.theme.fontSizes.xxs};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const FollowersCounter = styled.p`\n  font-size: ${(p) => p.theme.fontSizes.xxxs};\n  font-weight: ${(p) => p.theme.fontWeight.normal};\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const NavigateTo = styled(NavLink)`\n  &:hover {\n    background: ${(p) => p.theme.colors.accentColor};\n  }\n  padding: 6px 12px;\n  font-size: ${(p) => p.theme.fontSizes.xxxs};\n  font-weight: ${(p) => p.theme.fontWeight.bolt};\n  color: ${(p) => p.theme.colors.secondaryTextColor};\n  cursor: pointer;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  transition: background 0.2s ease-in-out;\n  background-color: ${(p) =>\n    p.isFollowed\n      ? p.theme.colors.accentColor\n      : p.theme.colors.primaryTextColor};\n`;\n","import { useSelector } from \"react-redux\";\n\nimport { getAccountInfo } from \"../../../redux/auth/authSelectors\";\n\nimport {\n  Item,\n  AvatarBorder,\n  AvatarWrapper,\n  Avatar,\n  Title,\n  TweetsCounterTitle,\n  FollowersCounterTitle,\n  TweetsCounter,\n  FollowersCounter,\n  NavigateTo,\n} from \"./UsersItem.styled\";\n\nexport const UsersItem = ({ currentUser, location }) => {\n  const myInfoInStorage = useSelector(getAccountInfo);\n\n  const { user, avatar } = currentUser;\n\n  return (\n    <Item>\n      <div style={{ flex: 0.5 }}>\n        <AvatarBorder\n          subscribed={currentUser.followersId.includes(myInfoInStorage.id)}\n        >\n          <AvatarWrapper>\n            <Avatar avatar={avatar} />\n          </AvatarWrapper>\n        </AvatarBorder>\n      </div>\n      <div style={{ flex: 1.5 }}>\n        <Title>\n          {user.length > 15\n            ? user.slice(0, 14).toLowerCase() + \"...\"\n            : user.toLowerCase()}\n        </Title>\n        <TweetsCounterTitle>tweets:</TweetsCounterTitle>\n        <TweetsCounter>\n          {parseInt(currentUser.tweets).toLocaleString(\"en\")}\n        </TweetsCounter>\n        <FollowersCounterTitle>followers:</FollowersCounterTitle>\n        <FollowersCounter>\n          {parseInt(currentUser.followers).toLocaleString(\"en\")}\n        </FollowersCounter>\n      </div>\n      <div style={{ flex: 0.5 }}>\n        <NavigateTo to={`/tweets/${currentUser.id}`} state={{ from: location }}>\n          open\n        </NavigateTo>\n      </div>\n    </Item>\n  );\n};\n","import styled from \"styled-components\";\nimport Select from \"react-select\";\n\nexport const SelectDrop = styled(Select)`\n  margin-bottom: 5px;\n  color: black;\n`;\n","import { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { SelectDrop } from \"./DropdownMenu.styled\";\n\nconst options = [\n  { value: \"show all\", label: \"show all\" },\n  { value: \"follow\", label: \"follow\" },\n  { value: \"followings\", label: \"followings\" },\n];\n\nexport function DropdownMenu({ selectedOption, setSelectedOption }) {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n    setSearchQuery({ query: selectedOption.value });\n  };\n\n  useEffect(() => {\n    setSelectedOption(\n      options.find((option) => option.value === searchQuery.get(\"query\"))\n        ? {\n            value: searchQuery.get(\"query\"),\n            label: searchQuery.get(\"query\"),\n          }\n        : selectedOption\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div style={{ width: \"100%\", marginBottom: \"15px\" }}>\n      <SelectDrop\n        value={\n          options.find((option) => option.value === searchQuery.get(\"query\"))\n            ? {\n                value: searchQuery.get(\"query\"),\n                label: searchQuery.get(\"query\"),\n              }\n            : selectedOption\n        }\n        onChange={handleChange}\n        options={options}\n        placeholder=\"Select an option\"\n      />\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nimport banner from \"../../../img/banner.png\";\n\nexport const Banner = styled.img.attrs({\n  src: banner,\n})`\n  width: 308px;\n  margin-bottom: 88px;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nexport const Button = styled.button`\n  &:hover {\n    transform: scale(1.05);\n  }\n  margin: 0 auto;\n  padding: 8px 10px;\n  font-size: ${(p) => p.theme.fontSizes.xxs};\n  font-weight: ${(p) => p.theme.fontWeight.bolt};\n  color: ${(p) => p.theme.colors.secondaryTextColor};\n  cursor: pointer;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  transition: transform 0.2s ease-in-out;\n  background-color: ${(p) =>\n    p.isFollowed\n      ? p.theme.colors.accentColor\n      : p.theme.colors.primaryTextColor};\n`;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Loader } from \"../../shared/Loader/Loader\";\nimport { UsersItem } from \"../UsersItem/UsersItem\";\nimport { DropdownMenu } from \"../DropdownMenu/DropdownMenu\";\n\nimport { fetchUsers } from \"../../../redux/users/usersOperation\";\nimport {\n  getUsers,\n  getUsersRefreshStatus,\n} from \"../../../redux/users/userSelectors\";\nimport { getAccountInfo } from \"../../../redux/auth/authSelectors\";\n\nimport { List, Button } from \"./UsersList.styled\";\n\nexport const UsersList = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const usersInStorage = useSelector(getUsers);\n  const myInfoInStorage = useSelector(getAccountInfo);\n  const isRefreshing = useSelector(getUsersRefreshStatus);\n\n  const [users, setUsers] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const [visibleUsersCount, setVisibleUsersCount] = useState(3);\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"show all\",\n    label: \"show all\",\n  });\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n    setUsers(usersInStorage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedOption.value === \"show all\") {\n      setUsers(usersInStorage);\n    } else if (selectedOption.value === \"follow\") {\n      setUsers(\n        usersInStorage.filter(\n          (user) => !user.followersId.includes(myInfoInStorage.id)\n        )\n      );\n    } else if (selectedOption.value === \"followings\") {\n      setUsers(\n        usersInStorage.filter((user) =>\n          user.followersId.includes(myInfoInStorage.id)\n        )\n      );\n    }\n  }, [myInfoInStorage.id, selectedOption, usersInStorage]);\n\n  useEffect(() => {\n    setisLoading(isRefreshing);\n  }, [isRefreshing]);\n\n  const handleLoadMoreClick = () => {\n    setVisibleUsersCount((count) => count + 3);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <DropdownMenu\n            setSelectedOption={setSelectedOption}\n            selectedOption={selectedOption}\n          />\n          <List>\n            {users.slice(0, visibleUsersCount).map((user) => (\n              <UsersItem key={user.id} currentUser={user} location={location} />\n            ))}\n          </List>\n          {visibleUsersCount < users.length && (\n            <Button onClick={handleLoadMoreClick}>Load more</Button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { UsersList } from \"../../components/tweetsPage/UsersList/UsersList\";\n\nconst TweetsPage = () => {\n  return <UsersList />;\n};\n\nexport default TweetsPage;\n","export const getAccountInfo = (state) => state.auth.user;\nexport const getAccountsRefreshStatus = (state) => state.auth.isRefreshing;\n","export const getUsers = (state) => state.users.data;\nexport const getUsersRefreshStatus = (state) => state.users.isRefreshing;\n"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","DotLoader","color","size","Item","p","theme","radius","normal","AvatarBorder","_templateObject2","props","subscribed","colors","primaryTextColor","round","AvatarWrapper","_templateObject3","primaryBgColor","Avatar","src","avatar","defaultAvatar","_templateObject4","Title","_templateObject5","fontSizes","xxs","fontWeight","TweetsCounterTitle","_templateObject6","TweetsCounter","_templateObject7","xxxs","FollowersCounterTitle","_templateObject8","FollowersCounter","_templateObject9","NavigateTo","NavLink","_templateObject10","accentColor","bolt","secondaryTextColor","isFollowed","UsersItem","_ref","currentUser","location","myInfoInStorage","useSelector","getAccountInfo","user","_jsxs","style","flex","followersId","includes","id","length","slice","toLowerCase","parseInt","tweets","toLocaleString","followers","to","concat","state","from","SelectDrop","Select","options","value","label","DropdownMenu","selectedOption","setSelectedOption","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchQuery","setSearchQuery","useEffect","find","option","get","width","marginBottom","onChange","query","placeholder","List","banner","Button","UsersList","useLocation","dispatch","useDispatch","usersInStorage","getUsers","isRefreshing","getUsersRefreshStatus","_useState","useState","_useState2","users","setUsers","_useState3","_useState4","isLoading","setisLoading","_useState5","_useState6","visibleUsersCount","setVisibleUsersCount","_useState7","_useState8","fetchUsers","filter","_Fragment","map","onClick","count","auth","data"],"sourceRoot":""}